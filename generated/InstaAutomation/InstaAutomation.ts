// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LogCancelledAutomation extends ethereum.Event {
  get params(): LogCancelledAutomation__Params {
    return new LogCancelledAutomation__Params(this);
  }
}

export class LogCancelledAutomation__Params {
  _event: LogCancelledAutomation;

  constructor(event: LogCancelledAutomation) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get nonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LogChangedOwner extends ethereum.Event {
  get params(): LogChangedOwner__Params {
    return new LogChangedOwner__Params(this);
  }
}

export class LogChangedOwner__Params {
  _event: LogChangedOwner;

  constructor(event: LogChangedOwner) {
    this._event = event;
  }

  get oldOnwer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOnwer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LogExecutedAutomation extends ethereum.Event {
  get params(): LogExecutedAutomation__Params {
    return new LogExecutedAutomation__Params(this);
  }
}

export class LogExecutedAutomation__Params {
  _event: LogExecutedAutomation;

  constructor(event: LogExecutedAutomation) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get nonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get params(): LogExecutedAutomationParamsStruct {
    return changetype<LogExecutedAutomationParamsStruct>(
      this._event.parameters[3].value.toTuple()
    );
  }

  get isSafe(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get automationFee(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get metadata(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }

  get finalHf(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get initialHf(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class LogExecutedAutomationParamsStruct extends ethereum.Tuple {
  get collateralToken(): Address {
    return this[0].toAddress();
  }

  get debtToken(): Address {
    return this[1].toAddress();
  }

  get collateralAmount(): BigInt {
    return this[2].toBigInt();
  }

  get debtAmount(): BigInt {
    return this[3].toBigInt();
  }

  get collateralAmountWithTotalFee(): BigInt {
    return this[4].toBigInt();
  }

  get swap(): LogExecutedAutomationParamsSwapStruct {
    return changetype<LogExecutedAutomationParamsSwapStruct>(this[5].toTuple());
  }

  get route(): BigInt {
    return this[6].toBigInt();
  }

  get rateMode(): BigInt {
    return this[7].toBigInt();
  }
}

export class LogExecutedAutomationParamsSwapStruct extends ethereum.Tuple {
  get buyToken(): Address {
    return this[0].toAddress();
  }

  get sellToken(): Address {
    return this[1].toAddress();
  }

  get sellAmt(): BigInt {
    return this[2].toBigInt();
  }

  get unitAmt(): BigInt {
    return this[3].toBigInt();
  }

  get callData(): Bytes {
    return this[4].toBytes();
  }
}

export class LogExecutionFailedAutomation extends ethereum.Event {
  get params(): LogExecutionFailedAutomation__Params {
    return new LogExecutionFailedAutomation__Params(this);
  }
}

export class LogExecutionFailedAutomation__Params {
  _event: LogExecutionFailedAutomation;

  constructor(event: LogExecutionFailedAutomation) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get nonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get params(): LogExecutionFailedAutomationParamsStruct {
    return changetype<LogExecutionFailedAutomationParamsStruct>(
      this._event.parameters[3].value.toTuple()
    );
  }

  get metadata(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get initialHf(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class LogExecutionFailedAutomationParamsStruct extends ethereum.Tuple {
  get collateralToken(): Address {
    return this[0].toAddress();
  }

  get debtToken(): Address {
    return this[1].toAddress();
  }

  get collateralAmount(): BigInt {
    return this[2].toBigInt();
  }

  get debtAmount(): BigInt {
    return this[3].toBigInt();
  }

  get collateralAmountWithTotalFee(): BigInt {
    return this[4].toBigInt();
  }

  get swap(): LogExecutionFailedAutomationParamsSwapStruct {
    return changetype<LogExecutionFailedAutomationParamsSwapStruct>(
      this[5].toTuple()
    );
  }

  get route(): BigInt {
    return this[6].toBigInt();
  }

  get rateMode(): BigInt {
    return this[7].toBigInt();
  }
}

export class LogExecutionFailedAutomationParamsSwapStruct extends ethereum.Tuple {
  get buyToken(): Address {
    return this[0].toAddress();
  }

  get sellToken(): Address {
    return this[1].toAddress();
  }

  get sellAmt(): BigInt {
    return this[2].toBigInt();
  }

  get unitAmt(): BigInt {
    return this[3].toBigInt();
  }

  get callData(): Bytes {
    return this[4].toBytes();
  }
}

export class LogFeeTransferred extends ethereum.Event {
  get params(): LogFeeTransferred__Params {
    return new LogFeeTransferred__Params(this);
  }
}

export class LogFeeTransferred__Params {
  _event: LogFeeTransferred;

  constructor(event: LogFeeTransferred) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokens(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }

  get amount(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class LogFlippedExecutors extends ethereum.Event {
  get params(): LogFlippedExecutors__Params {
    return new LogFlippedExecutors__Params(this);
  }
}

export class LogFlippedExecutors__Params {
  _event: LogFlippedExecutors;

  constructor(event: LogFlippedExecutors) {
    this._event = event;
  }

  get executors(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get status(): Array<boolean> {
    return this._event.parameters[1].value.toBooleanArray();
  }
}

export class LogSubmittedAutomation extends ethereum.Event {
  get params(): LogSubmittedAutomation__Params {
    return new LogSubmittedAutomation__Params(this);
  }
}

export class LogSubmittedAutomation__Params {
  _event: LogSubmittedAutomation;

  constructor(event: LogSubmittedAutomation) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get safeHF(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get thresholdHF(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get currentHf(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class LogSystemCall extends ethereum.Event {
  get params(): LogSystemCall__Params {
    return new LogSystemCall__Params(this);
  }
}

export class LogSystemCall__Params {
  _event: LogSystemCall;

  constructor(event: LogSystemCall) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get actionId(): string {
    return this._event.parameters[1].value.toString();
  }

  get metadata(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class LogSystemCancelledAutomation extends ethereum.Event {
  get params(): LogSystemCancelledAutomation__Params {
    return new LogSystemCancelledAutomation__Params(this);
  }
}

export class LogSystemCancelledAutomation__Params {
  _event: LogSystemCancelledAutomation;

  constructor(event: LogSystemCancelledAutomation) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get nonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get errorCode(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class LogUpdatedAutomationFee extends ethereum.Event {
  get params(): LogUpdatedAutomationFee__Params {
    return new LogUpdatedAutomationFee__Params(this);
  }
}

export class LogUpdatedAutomationFee__Params {
  _event: LogUpdatedAutomationFee;

  constructor(event: LogUpdatedAutomationFee) {
    this._event = event;
  }

  get oldAutomationFee(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get newAutomationFee(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class LogUpdatedBufferHf extends ethereum.Event {
  get params(): LogUpdatedBufferHf__Params {
    return new LogUpdatedBufferHf__Params(this);
  }
}

export class LogUpdatedBufferHf__Params {
  _event: LogUpdatedBufferHf;

  constructor(event: LogUpdatedBufferHf) {
    this._event = event;
  }

  get oldBufferHf(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newBufferHf(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class LogUpdatedMinHf extends ethereum.Event {
  get params(): LogUpdatedMinHf__Params {
    return new LogUpdatedMinHf__Params(this);
  }
}

export class LogUpdatedMinHf__Params {
  _event: LogUpdatedMinHf;

  constructor(event: LogUpdatedMinHf) {
    this._event = event;
  }

  get oldMinHf(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newMinHf(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class InstaAutomation___userAutomationConfigsResult {
  value0: Address;
  value1: i32;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: Address,
    value1: i32,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getUser(): Address {
    return this.value0;
  }

  getStatus(): i32 {
    return this.value1;
  }

  getNonce(): BigInt {
    return this.value2;
  }

  getSafeHF(): BigInt {
    return this.value3;
  }

  getThresholdHF(): BigInt {
    return this.value4;
  }
}

export class InstaAutomation extends ethereum.SmartContract {
  static bind(address: Address): InstaAutomation {
    return new InstaAutomation("InstaAutomation", address);
  }

  _automationFee(): i32 {
    let result = super.call("_automationFee", "_automationFee():(uint16)", []);

    return result[0].toI32();
  }

  try__automationFee(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "_automationFee",
      "_automationFee():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  _bufferHf(): BigInt {
    let result = super.call("_bufferHf", "_bufferHf():(uint128)", []);

    return result[0].toBigInt();
  }

  try__bufferHf(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("_bufferHf", "_bufferHf():(uint128)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _executors(param0: Address): boolean {
    let result = super.call("_executors", "_executors(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try__executors(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("_executors", "_executors(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _id(): BigInt {
    let result = super.call("_id", "_id():(uint32)", []);

    return result[0].toBigInt();
  }

  try__id(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("_id", "_id():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _minimumThresholdHf(): BigInt {
    let result = super.call(
      "_minimumThresholdHf",
      "_minimumThresholdHf():(uint128)",
      []
    );

    return result[0].toBigInt();
  }

  try__minimumThresholdHf(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "_minimumThresholdHf",
      "_minimumThresholdHf():(uint128)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _owner(): Address {
    let result = super.call("_owner", "_owner():(address)", []);

    return result[0].toAddress();
  }

  try__owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("_owner", "_owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  _status(): i32 {
    let result = super.call("_status", "_status():(uint8)", []);

    return result[0].toI32();
  }

  try__status(): ethereum.CallResult<i32> {
    let result = super.tryCall("_status", "_status():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  _userAutomationConfigs(
    param0: BigInt
  ): InstaAutomation___userAutomationConfigsResult {
    let result = super.call(
      "_userAutomationConfigs",
      "_userAutomationConfigs(uint32):(address,uint8,uint32,uint128,uint128)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new InstaAutomation___userAutomationConfigsResult(
      result[0].toAddress(),
      result[1].toI32(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt()
    );
  }

  try__userAutomationConfigs(
    param0: BigInt
  ): ethereum.CallResult<InstaAutomation___userAutomationConfigsResult> {
    let result = super.tryCall(
      "_userAutomationConfigs",
      "_userAutomationConfigs(uint32):(address,uint8,uint32,uint128,uint128)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new InstaAutomation___userAutomationConfigsResult(
        value[0].toAddress(),
        value[1].toI32(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt()
      )
    );
  }

  _userLatestId(param0: Address): BigInt {
    let result = super.call(
      "_userLatestId",
      "_userLatestId(address):(uint32)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try__userLatestId(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "_userLatestId",
      "_userLatestId(address):(uint32)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getHealthFactor(user: Address): BigInt {
    let result = super.call(
      "getHealthFactor",
      "getHealthFactor(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );

    return result[0].toBigInt();
  }

  try_getHealthFactor(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getHealthFactor",
      "getHealthFactor(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get aavePoolAddressesProvider_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get instaList_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelAutomationRequestCall extends ethereum.Call {
  get inputs(): CancelAutomationRequestCall__Inputs {
    return new CancelAutomationRequestCall__Inputs(this);
  }

  get outputs(): CancelAutomationRequestCall__Outputs {
    return new CancelAutomationRequestCall__Outputs(this);
  }
}

export class CancelAutomationRequestCall__Inputs {
  _call: CancelAutomationRequestCall;

  constructor(call: CancelAutomationRequestCall) {
    this._call = call;
  }
}

export class CancelAutomationRequestCall__Outputs {
  _call: CancelAutomationRequestCall;

  constructor(call: CancelAutomationRequestCall) {
    this._call = call;
  }
}

export class ChangeOwnerCall extends ethereum.Call {
  get inputs(): ChangeOwnerCall__Inputs {
    return new ChangeOwnerCall__Inputs(this);
  }

  get outputs(): ChangeOwnerCall__Outputs {
    return new ChangeOwnerCall__Outputs(this);
  }
}

export class ChangeOwnerCall__Inputs {
  _call: ChangeOwnerCall;

  constructor(call: ChangeOwnerCall) {
    this._call = call;
  }

  get newOwner_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeOwnerCall__Outputs {
  _call: ChangeOwnerCall;

  constructor(call: ChangeOwnerCall) {
    this._call = call;
  }
}

export class ExecuteAutomationCall extends ethereum.Call {
  get inputs(): ExecuteAutomationCall__Inputs {
    return new ExecuteAutomationCall__Inputs(this);
  }

  get outputs(): ExecuteAutomationCall__Outputs {
    return new ExecuteAutomationCall__Outputs(this);
  }
}

export class ExecuteAutomationCall__Inputs {
  _call: ExecuteAutomationCall;

  constructor(call: ExecuteAutomationCall) {
    this._call = call;
  }

  get user_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get id_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get nonce_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get params(): ExecuteAutomationCallParamsStruct {
    return changetype<ExecuteAutomationCallParamsStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }

  get metadata_(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class ExecuteAutomationCall__Outputs {
  _call: ExecuteAutomationCall;

  constructor(call: ExecuteAutomationCall) {
    this._call = call;
  }
}

export class ExecuteAutomationCallParamsStruct extends ethereum.Tuple {
  get collateralToken(): Address {
    return this[0].toAddress();
  }

  get debtToken(): Address {
    return this[1].toAddress();
  }

  get collateralAmount(): BigInt {
    return this[2].toBigInt();
  }

  get debtAmount(): BigInt {
    return this[3].toBigInt();
  }

  get collateralAmountWithTotalFee(): BigInt {
    return this[4].toBigInt();
  }

  get swap(): ExecuteAutomationCallParamsSwapStruct {
    return changetype<ExecuteAutomationCallParamsSwapStruct>(this[5].toTuple());
  }

  get route(): BigInt {
    return this[6].toBigInt();
  }

  get rateMode(): BigInt {
    return this[7].toBigInt();
  }
}

export class ExecuteAutomationCallParamsSwapStruct extends ethereum.Tuple {
  get buyToken(): Address {
    return this[0].toAddress();
  }

  get sellToken(): Address {
    return this[1].toAddress();
  }

  get sellAmt(): BigInt {
    return this[2].toBigInt();
  }

  get unitAmt(): BigInt {
    return this[3].toBigInt();
  }

  get callData(): Bytes {
    return this[4].toBytes();
  }
}

export class FlipExecutorCall extends ethereum.Call {
  get inputs(): FlipExecutorCall__Inputs {
    return new FlipExecutorCall__Inputs(this);
  }

  get outputs(): FlipExecutorCall__Outputs {
    return new FlipExecutorCall__Outputs(this);
  }
}

export class FlipExecutorCall__Inputs {
  _call: FlipExecutorCall;

  constructor(call: FlipExecutorCall) {
    this._call = call;
  }

  get executor_(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get status_(): Array<boolean> {
    return this._call.inputValues[1].value.toBooleanArray();
  }
}

export class FlipExecutorCall__Outputs {
  _call: FlipExecutorCall;

  constructor(call: FlipExecutorCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get owner_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get automationFee_(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get minimumThresholdHf_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get bufferHf_(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class SubmitAutomationRequestCall extends ethereum.Call {
  get inputs(): SubmitAutomationRequestCall__Inputs {
    return new SubmitAutomationRequestCall__Inputs(this);
  }

  get outputs(): SubmitAutomationRequestCall__Outputs {
    return new SubmitAutomationRequestCall__Outputs(this);
  }
}

export class SubmitAutomationRequestCall__Inputs {
  _call: SubmitAutomationRequestCall;

  constructor(call: SubmitAutomationRequestCall) {
    this._call = call;
  }

  get safeHealthFactor_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get thresholdHealthFactor_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SubmitAutomationRequestCall__Outputs {
  _call: SubmitAutomationRequestCall;

  constructor(call: SubmitAutomationRequestCall) {
    this._call = call;
  }
}

export class SystemCallCall extends ethereum.Call {
  get inputs(): SystemCallCall__Inputs {
    return new SystemCallCall__Inputs(this);
  }

  get outputs(): SystemCallCall__Outputs {
    return new SystemCallCall__Outputs(this);
  }
}

export class SystemCallCall__Inputs {
  _call: SystemCallCall;

  constructor(call: SystemCallCall) {
    this._call = call;
  }

  get actionId_(): string {
    return this._call.inputValues[0].value.toString();
  }

  get metadata_(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SystemCallCall__Outputs {
  _call: SystemCallCall;

  constructor(call: SystemCallCall) {
    this._call = call;
  }
}

export class SystemCancelCall extends ethereum.Call {
  get inputs(): SystemCancelCall__Inputs {
    return new SystemCancelCall__Inputs(this);
  }

  get outputs(): SystemCancelCall__Outputs {
    return new SystemCancelCall__Outputs(this);
  }
}

export class SystemCancelCall__Inputs {
  _call: SystemCancelCall;

  constructor(call: SystemCancelCall) {
    this._call = call;
  }

  get users_(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get ids_(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get errorCodes_(): Array<i32> {
    return this._call.inputValues[2].value.toI32Array();
  }
}

export class SystemCancelCall__Outputs {
  _call: SystemCancelCall;

  constructor(call: SystemCancelCall) {
    this._call = call;
  }
}

export class TransferFeeCall extends ethereum.Call {
  get inputs(): TransferFeeCall__Inputs {
    return new TransferFeeCall__Inputs(this);
  }

  get outputs(): TransferFeeCall__Outputs {
    return new TransferFeeCall__Outputs(this);
  }
}

export class TransferFeeCall__Inputs {
  _call: TransferFeeCall;

  constructor(call: TransferFeeCall) {
    this._call = call;
  }

  get tokens_(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get recipient_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class TransferFeeCall__Outputs {
  _call: TransferFeeCall;

  constructor(call: TransferFeeCall) {
    this._call = call;
  }
}

export class UpdateAutomationFeeCall extends ethereum.Call {
  get inputs(): UpdateAutomationFeeCall__Inputs {
    return new UpdateAutomationFeeCall__Inputs(this);
  }

  get outputs(): UpdateAutomationFeeCall__Outputs {
    return new UpdateAutomationFeeCall__Outputs(this);
  }
}

export class UpdateAutomationFeeCall__Inputs {
  _call: UpdateAutomationFeeCall;

  constructor(call: UpdateAutomationFeeCall) {
    this._call = call;
  }

  get newAutomationFee_(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class UpdateAutomationFeeCall__Outputs {
  _call: UpdateAutomationFeeCall;

  constructor(call: UpdateAutomationFeeCall) {
    this._call = call;
  }
}

export class UpdateBufferHfCall extends ethereum.Call {
  get inputs(): UpdateBufferHfCall__Inputs {
    return new UpdateBufferHfCall__Inputs(this);
  }

  get outputs(): UpdateBufferHfCall__Outputs {
    return new UpdateBufferHfCall__Outputs(this);
  }
}

export class UpdateBufferHfCall__Inputs {
  _call: UpdateBufferHfCall;

  constructor(call: UpdateBufferHfCall) {
    this._call = call;
  }

  get newBufferHf_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateBufferHfCall__Outputs {
  _call: UpdateBufferHfCall;

  constructor(call: UpdateBufferHfCall) {
    this._call = call;
  }
}

export class UpdateMinimunHfCall extends ethereum.Call {
  get inputs(): UpdateMinimunHfCall__Inputs {
    return new UpdateMinimunHfCall__Inputs(this);
  }

  get outputs(): UpdateMinimunHfCall__Outputs {
    return new UpdateMinimunHfCall__Outputs(this);
  }
}

export class UpdateMinimunHfCall__Inputs {
  _call: UpdateMinimunHfCall;

  constructor(call: UpdateMinimunHfCall) {
    this._call = call;
  }

  get newMinimumThresholdHf_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateMinimunHfCall__Outputs {
  _call: UpdateMinimunHfCall;

  constructor(call: UpdateMinimunHfCall) {
    this._call = call;
  }
}
